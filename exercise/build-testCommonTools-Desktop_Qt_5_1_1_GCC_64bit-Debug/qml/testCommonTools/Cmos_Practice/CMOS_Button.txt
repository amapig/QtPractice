公用控件之CMOS_Button.qml
说明：Button是大家经常使用的控件，为了能在整个系统风格的统一，特此实现一份使用最多的风格的button，button常常分为只有图片，只有文本及图文一起。所以本控件使用了系统的Button空间并且根据不同的使用特点进行了相关的策略划分。本控件根据text几iconSource（属于Button属性）的值确定风格，如果两个都有只则都现实，如果只有文本则显示文本样式，只有图片则现实图片样式。当然使用者可以根据自己的喜好重新写Button的style属性，达到自己的效果。
一般，按钮的大小根据图片大小或者文字内容确定，如果使用固定大小也可以敬意宽高，但建议使用默认值以达到更好的效果。详细使用见下面说明：

    property bool isHorizontal: false //true:icon left text right  	false:reverse 判断如果是图片和文本都现实的时候，可以判定两者水平放置还是垂直放置，确定放置方向
    property bool isIconBefore:false 如果文本和图片都现实的时候，如果isHorizontal为true时表示图片是文本之前还是之后
    property bool isBgUseImage:false  表示背景使用图片还是颜色
    如果背景使用图片则需要对bgIconSource进行赋值

    property color fontColor:pressed?"#ffffff":"#1ca72b" button文本的颜色，一般根据不同的状态现实
    property color bgColor:pressed?"#1ca72b":"#ffffff" button背景颜色，默认使用的rectangle作为背景控件，根据不同的状态现实不同，用户也可以使用背景图片，需要实现Button的style属性定制
    property int fontSize: 36 字体大小，默认使用36
	property string bgIconSource:!enabled?"images/bnbg2zhihui.png":                   	 pressed?"images/									bnbgactive.png":"images/bnbg.png"  //默认背景图片
	
    property int borderWidth: 1  //如果使用rectangle背景时border宽度
    property color borderColor: "black" //如果使用rectangle背景时border颜色


    property int lMargin:30 表示左侧边距
    property int rMargin:30 表示右侧边距
    property int tMargin:16 表示顶端边距
    property int bMargin:16 表示底端边距

    property int spacing:20 表示文本和图片都现实的时候的图片

如果用户需要根据自己的喜好进行实现则可以重新实现style属性。
example：
 CMOS_Button{
        text:"确定确定dfsfds确定确定"
        anchors.verticalCenter: parent.verticalCenter
        anchors.right: parent.right
        //width:parent.width
        //fontColor: pressed?"yellow":"black"
        //bgColor: pressed?"white":"red"
        isBgUseImage: true //使用背景图片
        enabled: true  
        bgIconSource: !enabled?"images/bnbg2zhihui.png":
                                 pressed?"images/bnbg2active.png":"images/bnbg2.png" //根据不同的状态设置对应的图片
    }

    CMOS_Button{ // 使用图片模式
        anchors.left: parent.left
        iconSource: pressed?"images/next.png":"images/prev.png"
    }

    CMOS_Button{ //使用混合模式
        iconSource: "images/prev.png"
        text:"确定确定确定确定"
        anchors.right:parent.right
        //width:parent.width
        isHorizontal: true
    }
	

特别注意，因为在使用component属性，在整个控件加载完成之前其对应的item是空的，如果加载完成之后就可以访问对应的item属性进行响应的功能设置。这样就可以访问大量的内置属性，在此以替代暴露所有属性。因为使用了CMOS_BasicTitleBar，所以对于不同的区域提供了可供访问的item属性，一般是leftButton，rightButton及middleArea以及background。在控件加载完之后就可以访问并通过这写对象属性访问一些封装属性，以达到全面属性覆盖。


