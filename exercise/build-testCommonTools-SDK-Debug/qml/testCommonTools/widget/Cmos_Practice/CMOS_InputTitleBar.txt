公用控件之CMOS_InputTitleBar.qml
说明：CMOS_InputTitleBar主要是用于包含编辑框的内容。其仍然使用CMOS_BasicTitleBar作为基础，只是对于中间区域使用了CMOS_LineEdit作为其中间控件，更句最常用的内容进行整改。各个使用人可以对不同的需求使用CMOS_BasicTitleBar的enabled相关属性以及一些特点进行修改。
同时各个控件之间需要进行数据交互，所以可以通过访问对应component的item值进行深层次的设置和访问。为此降低将所有元素属性再次暴露的复杂性。一般默认的对于字控件的初始化如果CMOS_BasicTitleBar提供的暴露属性还不够，则可以将初始化放置在整个控件加载完之后进行，即检测Component.onCompleted信号内进行，通过访问Component对应的item如leftButton/rightButton/middleArea/background等有基础控件CMOS_BasicTitleBar提供的对象访问，比如：
function getText()
    {
        if(middleArea)
        {
            return middleArea.getText()
        }
        return ""
    }




signal
   textChanged() 当编辑框内容发生变化的时候则触发此信号
function
    getText()获取当前的文本内容


example:
    CMOS_InputTitleBar{
        id:inputBar
        anchors.top: editBar.bottom
        anchors.topMargin: 5
        Component.onCompleted: {
            middleArea.middleArea.text = "red "
        }

        onTextChanged: {
            console.log("CMOS_InputTitleBar onTextChanged:",inputBar.getText())
        }
    }


特别注意，因为在使用component属性，在整个控件加载完成之前其对应的item是空的，如果加载完成之后就可以访问对应的item属性进行响应的功能设置。这样就可以访问大量的内置属性，在此以替代暴露所有属性。因为使用了CMOS_BasicTitleBar，所以对于不同的区域提供了可供访问的item属性，一般是leftButton，rightButton及middleArea以及background。在控件加载完之后就可以访问并通过这写对象属性访问一些封装属性，以达到全面属性覆盖。
